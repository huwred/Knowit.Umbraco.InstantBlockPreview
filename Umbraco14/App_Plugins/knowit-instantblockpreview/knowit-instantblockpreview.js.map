{"version":3,"file":"knowit-instantblockpreview.js","sources":["../../../Knowit.Umbraco.Bellissima.InstantBlockPreview/Frontend/src/index.ts"],"sourcesContent":["import { LitElement, html, customElement, unsafeHTML} from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport { UMB_PROPERTY_CONTEXT } from '@umbraco-cms/backoffice/property';\r\nimport { UMB_DOCUMENT_WORKSPACE_CONTEXT } from \"@umbraco-cms/backoffice/document\";\r\nimport { UmbWorkspaceUniqueType } from \"@umbraco-cms/backoffice/workspace\";\r\nimport { UmbContextToken } from \"@umbraco-cms/backoffice/context-api\";\r\nimport { observeMultiple } from \"@umbraco-cms/backoffice/observable-api\";\r\nimport { debounce } from \"@umbraco-cms/backoffice/utils\";\r\n\r\n@customElement('knowit-instant-block-preview')\r\nexport class InstantBlockPreview extends UmbElementMixin(LitElement) {\r\n\r\n  #contentVals : any |undefined = undefined;\r\n  #currentValue : any | undefined = undefined;\r\n  #currentId : UmbWorkspaceUniqueType | undefined = undefined;\r\n  #propertyType: string | undefined = undefined;\r\n  #documentTypeId: string | undefined = undefined;\r\n  #label: string | undefined = undefined;\r\n  #loader = `<uui-loader style=\"margin-right: 20px\"></uui-loader> Loading preview...`;\r\n  #showLoader = false;\r\n  #htmlOutput = ``;\r\n  #areas: any | undefined = undefined;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.#contentVals = {};\r\n    this.#htmlOutput = this.blockBeam();\r\n\r\n    // currently not exposed by the context-api, so we need to create our own\r\n    const UMB_BLOCK_GRID_ENTRY_CONTEXT = new UmbContextToken<any>('UmbBlockEntryContext')\r\n    const UMB_BLOCK_LIST_ENTRY_CONTEXT = new UmbContextToken<any>('UmbBlockEntryContext');\r\n\r\n    // fetch id and type-id from the document\r\n    this.consumeContext(UMB_DOCUMENT_WORKSPACE_CONTEXT, (workspaceContext) => {\r\n      this.#currentId = workspaceContext.getUnique();\r\n      this.#documentTypeId = workspaceContext.getContentTypeId();\r\n    });\r\n\r\n\r\n    this.consumeContext(UMB_PROPERTY_CONTEXT, (propertyContext) => {\r\n      this.#propertyType = propertyContext.getAlias();\r\n    \r\n      // handle block grid\r\n      this.consumeContext(UMB_BLOCK_GRID_ENTRY_CONTEXT, (context) => {\r\n        \r\n        // fetch the label of the block and init the blockbeam with the label\r\n        this.observe(context.label, (label) => {\r\n          this.#label = label as string;\r\n          this.#htmlOutput = this.blockBeam();\r\n          this.requestUpdate();\r\n        });\r\n        \r\n        // handle the block whenever content or value change\r\n        this.observe(observeMultiple(context.content, propertyContext.value), ([content, currentValue]) => {\r\n          this.handleBlock(content, currentValue);\r\n        });\r\n\r\n        // handle areas\r\n        if(context.areas) {\r\n          this.observe(context.areas, areas => {\r\n            this.#areas = areas;\r\n          });\r\n        }\r\n      });\r\n      \r\n      // handle block list\r\n      this.consumeContext(UMB_BLOCK_LIST_ENTRY_CONTEXT, (context) => {\r\n        this.observe(context.label, (label) => {\r\n          this.#label = label as string;\r\n          this.#htmlOutput = this.blockBeam();\r\n          this.requestUpdate();\r\n        });\r\n\r\n        this.observe(observeMultiple(context.content, propertyContext.value), ([content, currentValue]) => {\r\n          this.handleBlock(content, currentValue);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  parseBadKeys(content: any) {\r\n    for (const key in content) {\r\n      const value = content[key];\r\n\r\n      // content picker\r\n      if (Array.isArray(content[key])) {\r\n          let allItemsAreValid = content[key].every(item => item && typeof item.type === 'string' && typeof item.unique === 'string');\r\n\r\n          if (allItemsAreValid) {\r\n              for (let i = 0; i < content[key].length; i++) {\r\n                  const newItem = `umb://${content[key][i].type}/${content[key][i].unique}`;\r\n                  content[key][i] = newItem;\r\n              }\r\n              content[key] = content[key].join(',');\r\n          }\r\n      }\r\n      // number slider\r\n      if (value && typeof value === 'object' && 'from' in value && 'to' in value) {\r\n        // Check if 'from' and 'to' are numbers and are the same\r\n        if (typeof value.from === 'number' && typeof value.to === 'number' && value.from === value.to) {\r\n            content[key] = value.from;  // Replace the object with the number\r\n        }\r\n      }\r\n    }\r\n    return content;\r\n  }\r\n\r\n  handleBlock(content : any, currentValue : any) {\r\n    this.#showLoader = true;\r\n    \r\n    if(!currentValue) return;\r\n    // make them mutable\r\n    const obj = JSON.parse(JSON.stringify(currentValue));\r\n    content = JSON.parse(JSON.stringify(content));\r\n    \r\n    // only process if the content has changed\r\n    if(this.#contentVals[content.udi] && JSON.stringify(this.#contentVals[content.udi]) === JSON.stringify(content)) {\r\n      return;\r\n    }\r\n    \r\n\r\n    this.#contentVals[content.udi] = content;\r\n    \r\n    const index = obj.contentData.findIndex((f: { udi: any; }) => f.udi == content.udi);\r\n    \r\n    obj.contentData[index] = content;\r\n    obj.target = content.udi;\r\n    \r\n\r\n    for(let i = 0; i < obj.settingsData.length; i++) {\r\n      obj.settingsData[i] = this.parseBadKeys(obj.settingsData[i]);\r\n    }\r\n\r\n    for(let i = 0; i < obj.contentData.length; i++) {\r\n      obj.contentData[i] = this.parseBadKeys(obj.contentData[i]);\r\n    }\r\n    \r\n    this.#currentValue = obj;\r\n\r\n    const payload = {\r\n      content: JSON.stringify(this.#currentValue),\r\n      contentId: this.#currentId,\r\n      propertyTypeAlias: this.#propertyType,\r\n      contentTypeId: this.#documentTypeId,\r\n    }\r\n\r\n    fetch('/api/blockpreview', {\r\n      method: 'POST',\r\n      body: JSON.stringify(payload),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(response => response.json()).then(data => {\r\n      \r\n      this.#showLoader = false;\r\n      if(data.html === \"blockbeam\")\r\n        this.#htmlOutput = this.blockBeam();  \r\n      else {\r\n        const containsRenderGridAreaSlots = data.html.includes(\"###renderGridAreaSlots\");\r\n        if(containsRenderGridAreaSlots) {\r\n          const areaHtml = this.areas();\r\n          data.html = data.html.replace(\"###renderGridAreaSlots\", areaHtml);\r\n        }\r\n\r\n        this.#htmlOutput = '<div style=\"border: 1px solid var(--uui-color-border,#d8d7d9); min-height: 50px; box-sizing: border-box;\">' + data.html + '</div>';\r\n      }\r\n      this.requestUpdate();\r\n\r\n      \r\n      const debouncedScriptParser = debounce(() => {\r\n        this.manageScripts();\r\n      }, 100);\r\n  \r\n      debouncedScriptParser();\r\n    });\r\n\r\n  }\r\n\r\n  manageScripts() {\r\n    const scripts = this.shadowRoot?.querySelectorAll('script');\r\n    scripts?.forEach(oldScript => {\r\n      const newScript = document.createElement('script');\r\n\r\n      // Copy attributes from old script to new script\r\n      Array.from(oldScript.attributes).forEach(attr => {\r\n        newScript.setAttribute(attr.name, attr.value);\r\n      });\r\n\r\n      // Copy the inline script content\r\n      if (oldScript.src) {\r\n        // If the script has a src attribute, set it to the new script\r\n        newScript.src = oldScript.src;\r\n      } else {\r\n        // Otherwise, set the inline script content\r\n        newScript.textContent = oldScript.textContent;\r\n      }\r\n\r\n      // Append the new script to the same parent node\r\n      oldScript?.parentNode?.replaceChild(newScript, oldScript);\r\n    });\r\n  }\r\n\r\n  areas() {\r\n    // todo, fix href\r\n    return this.#areas && this.#areas.length > 0\r\n    ? `\r\n      <umb-ref-grid-block standalone href=\"\">\r\n        <span style=\"margin-right: 20px\">${this.#label}</span> ${this.#showLoader ? this.#loader : ''}\r\n        <umb-block-grid-areas-container slot=\"areas\"></umb-block-grid-areas-container>\r\n      </umb-ref-grid-block>\r\n      `\r\n    : '';\r\n\r\n  }\r\n\r\n  blockBeam() {\r\n    // todo, fix href\r\n    return `\r\n    <umb-ref-grid-block standalone href=\"\">\r\n      <span style=\"margin-right: 20px\">${this.#label}</span> ${this.#showLoader ? this.#loader : ''}\r\n\t\t</umb-ref-grid-block>`\r\n  }\r\n\r\n  render() {\r\n    return html`${unsafeHTML(this.#htmlOutput)}`;\r\n  }\r\n}\r\n\r\nexport default InstantBlockPreview;\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'knowit-instant-block-preview': InstantBlockPreview;\r\n  }\r\n}"],"names":["_contentVals","_currentValue","_currentId","_propertyType","_documentTypeId","_label","_loader","_showLoader","_htmlOutput","_areas","InstantBlockPreview","UmbElementMixin","LitElement","__privateAdd","__privateSet","UMB_BLOCK_GRID_ENTRY_CONTEXT","UmbContextToken","UMB_BLOCK_LIST_ENTRY_CONTEXT","UMB_DOCUMENT_WORKSPACE_CONTEXT","workspaceContext","UMB_PROPERTY_CONTEXT","propertyContext","context","label","observeMultiple","content","currentValue","areas","key","value","item","i","newItem","obj","__privateGet","index","f","payload","response","data","areaHtml","debounce","scripts","_a","oldScript","newScript","attr","html","unsafeHTML","__decorateClass","customElement","InstantBlockPreview$1"],"mappings":";;;;;;;;;;;;;gVAAAA,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC;AAUO,IAAMC,IAAN,cAAkCC,EAAgBC,CAAU,EAAE;AAAA,EAanE,cAAc;AACN,aAZRC,EAAA,MAAAb,CAAA,GACAa,EAAA,MAAAZ,CAAA,GACAY,EAAA,MAAAX,CAAA,GACAW,EAAA,MAAAV,CAAA,GACAU,EAAA,MAAAT,CAAA,GACAS,EAAA,MAAAR,CAAA,GACUQ,EAAA,MAAAP,GAAA,yEAAA,GACIO,EAAA,MAAAN,GAAA,EAAA,GACAM,EAAA,MAAAL,GAAA,EAAA,GACdK,EAAA,MAAAJ,CAAA,GAKEK,EAAA,MAAKd,GAAe,CAAA,CAAC,GAChBc,EAAA,MAAAN,GAAc,KAAK,UAAU,CAAA;AAG5B,UAAAO,IAA+B,IAAIC,EAAqB,sBAAsB,GAC9EC,IAA+B,IAAID,EAAqB,sBAAsB;AAG/E,SAAA,eAAeE,GAAgC,CAACC,MAAqB;AACnE,MAAAL,EAAA,MAAAZ,GAAaiB,EAAiB,UAAU,CAAA,GACxCL,EAAA,MAAAV,GAAkBe,EAAiB,iBAAiB,CAAA;AAAA,IAAA,CAC1D,GAGI,KAAA,eAAeC,GAAsB,CAACC,MAAoB;AACxD,MAAAP,EAAA,MAAAX,GAAgBkB,EAAgB,SAAS,CAAA,GAGzC,KAAA,eAAeN,GAA8B,CAACO,MAAY;AAG7D,aAAK,QAAQA,EAAQ,OAAO,CAACC,MAAU;AACrC,UAAAT,EAAA,MAAKT,GAASkB,CAAA,GACTT,EAAA,MAAAN,GAAc,KAAK,UAAU,CAAA,GAClC,KAAK,cAAc;AAAA,QAAA,CACpB,GAGI,KAAA,QAAQgB,EAAgBF,EAAQ,SAASD,EAAgB,KAAK,GAAG,CAAC,CAACI,GAASC,CAAY,MAAM;AAC5F,eAAA,YAAYD,GAASC,CAAY;AAAA,QAAA,CACvC,GAGEJ,EAAQ,SACJ,KAAA,QAAQA,EAAQ,OAAO,CAASK,MAAA;AACnC,UAAAb,EAAA,MAAKL,GAASkB,CAAA;AAAA,QAAA,CACf;AAAA,MACH,CACD,GAGI,KAAA,eAAeV,GAA8B,CAACK,MAAY;AAC7D,aAAK,QAAQA,EAAQ,OAAO,CAACC,MAAU;AACrC,UAAAT,EAAA,MAAKT,GAASkB,CAAA,GACTT,EAAA,MAAAN,GAAc,KAAK,UAAU,CAAA,GAClC,KAAK,cAAc;AAAA,QAAA,CACpB,GAEI,KAAA,QAAQgB,EAAgBF,EAAQ,SAASD,EAAgB,KAAK,GAAG,CAAC,CAACI,GAASC,CAAY,MAAM;AAC5F,eAAA,YAAYD,GAASC,CAAY;AAAA,QAAA,CACvC;AAAA,MAAA,CACF;AAAA,IAAA,CACF;AAAA,EACH;AAAA,EAEA,aAAaD,GAAc;AACzB,eAAWG,KAAOH,GAAS;AACnB,YAAAI,IAAQJ,EAAQG,CAAG;AAGzB,UAAI,MAAM,QAAQH,EAAQG,CAAG,CAAC,KACHH,EAAQG,CAAG,EAAE,MAAM,CAAQE,MAAAA,KAAQ,OAAOA,EAAK,QAAS,YAAY,OAAOA,EAAK,UAAW,QAAQ,GAEpG;AAClB,iBAASC,IAAI,GAAGA,IAAIN,EAAQG,CAAG,EAAE,QAAQG,KAAK;AAC1C,gBAAMC,IAAU,SAASP,EAAQG,CAAG,EAAEG,CAAC,EAAE,IAAI,IAAIN,EAAQG,CAAG,EAAEG,CAAC,EAAE,MAAM;AAC/D,UAAAN,EAAAG,CAAG,EAAEG,CAAC,IAAIC;AAAA,QACtB;AACA,QAAAP,EAAQG,CAAG,IAAIH,EAAQG,CAAG,EAAE,KAAK,GAAG;AAAA,MACxC;AAGJ,MAAIC,KAAS,OAAOA,KAAU,YAAY,UAAUA,KAAS,QAAQA,KAE/D,OAAOA,EAAM,QAAS,YAAY,OAAOA,EAAM,MAAO,YAAYA,EAAM,SAASA,EAAM,OAC/EJ,EAAAG,CAAG,IAAIC,EAAM;AAAA,IAG7B;AACO,WAAAJ;AAAA,EACT;AAAA,EAEA,YAAYA,GAAeC,GAAoB;AAG7C,QAFAZ,EAAA,MAAKP,GAAc,EAAA,GAEhB,CAACmB,EAAc;AAElB,UAAMO,IAAM,KAAK,MAAM,KAAK,UAAUP,CAAY,CAAC;AAInD,QAHAD,IAAU,KAAK,MAAM,KAAK,UAAUA,CAAO,CAAC,GAGzCS,QAAKlC,CAAa,EAAAyB,EAAQ,GAAG,KAAK,KAAK,UAAUS,EAAA,MAAKlC,CAAa,EAAAyB,EAAQ,GAAG,CAAC,MAAM,KAAK,UAAUA,CAAO;AAC5G;AAIG,IAAAS,EAAA,MAAAlC,CAAA,EAAayB,EAAQ,GAAG,IAAIA;AAE3B,UAAAU,IAAQF,EAAI,YAAY,UAAU,CAACG,MAAqBA,EAAE,OAAOX,EAAQ,GAAG;AAE9E,IAAAQ,EAAA,YAAYE,CAAK,IAAIV,GACzBQ,EAAI,SAASR,EAAQ;AAGrB,aAAQ,IAAI,GAAG,IAAIQ,EAAI,aAAa,QAAQ;AACtC,MAAAA,EAAA,aAAa,CAAC,IAAI,KAAK,aAAaA,EAAI,aAAa,CAAC,CAAC;AAG7D,aAAQ,IAAI,GAAG,IAAIA,EAAI,YAAY,QAAQ;AACrC,MAAAA,EAAA,YAAY,CAAC,IAAI,KAAK,aAAaA,EAAI,YAAY,CAAC,CAAC;AAG3D,IAAAnB,EAAA,MAAKb,GAAgBgC,CAAA;AAErB,UAAMI,IAAU;AAAA,MACd,SAAS,KAAK,UAAUH,EAAA,MAAKjC,CAAa,CAAA;AAAA,MAC1C,WAAWiC,EAAK,MAAAhC,CAAA;AAAA,MAChB,mBAAmBgC,EAAK,MAAA/B,CAAA;AAAA,MACxB,eAAe+B,EAAK,MAAA9B,CAAA;AAAA,IAAA;AAGtB,UAAM,qBAAqB;AAAA,MACzB,QAAQ;AAAA,MACR,MAAM,KAAK,UAAUiC,CAAO;AAAA,MAC5B,SAAS;AAAA,QACP,gBAAgB;AAAA,MAClB;AAAA,IAAA,CACD,EACA,KAAK,CAAAC,MAAYA,EAAS,MAAM,EAAE,KAAK,CAAQC,MAAA;AAG9C,UADAzB,EAAA,MAAKP,GAAc,EAAA,GAChBgC,EAAK,SAAS;AACV,QAAAzB,EAAA,MAAAN,GAAc,KAAK,UAAU,CAAA;AAAA,WAC/B;AAEH,YADoC+B,EAAK,KAAK,SAAS,wBAAwB,GAC/C;AACxB,gBAAAC,IAAW,KAAK;AACtB,UAAAD,EAAK,OAAOA,EAAK,KAAK,QAAQ,0BAA0BC,CAAQ;AAAA,QAClE;AAEK,QAAA1B,EAAA,MAAAN,GAAc,+GAA+G+B,EAAK,OAAO,QAAA;AAAA,MAChJ;AACA,WAAK,cAAc,GAGWE,EAAS,MAAM;AAC3C,aAAK,cAAc;AAAA,SAClB,GAAG;IAEgB,CACvB;AAAA,EAEH;AAAA,EAEA,gBAAgB;;AACd,UAAMC,KAAUC,IAAA,KAAK,eAAL,gBAAAA,EAAiB,iBAAiB;AAClD,IAAAD,KAAA,QAAAA,EAAS,QAAQ,CAAaE,MAAA;;AACtB,YAAAC,IAAY,SAAS,cAAc,QAAQ;AAGjD,YAAM,KAAKD,EAAU,UAAU,EAAE,QAAQ,CAAQE,MAAA;AAC/C,QAAAD,EAAU,aAAaC,EAAK,MAAMA,EAAK,KAAK;AAAA,MAAA,CAC7C,GAGGF,EAAU,MAEZC,EAAU,MAAMD,EAAU,MAG1BC,EAAU,cAAcD,EAAU,cAIzBD,IAAAC,KAAA,gBAAAA,EAAA,eAAA,QAAAD,EAAY,aAAaE,GAAWD;AAAA,IAAS;AAAA,EAE5D;AAAA,EAEA,QAAQ;AAEN,WAAOV,EAAK,MAAAzB,CAAA,KAAUyB,EAAK,MAAAzB,CAAA,EAAO,SAAS,IACzC;AAAA;AAAA,2CAEqCyB,QAAK7B,CAAM,CAAA,WAAW6B,QAAK3B,CAAc,IAAA2B,EAAA,MAAK5B,KAAU,EAAE;AAAA;AAAA;AAAA,UAI/F;AAAA,EAEJ;AAAA,EAEA,YAAY;AAEH,WAAA;AAAA;AAAA,yCAE8B4B,QAAK7B,CAAM,CAAA,WAAW6B,QAAK3B,CAAc,IAAA2B,EAAA,MAAK5B,KAAU,EAAE;AAAA;AAAA,EAEjG;AAAA,EAEA,SAAS;AACP,WAAOyC,IAAOC,EAAWd,EAAK,MAAA1B,CAAA,CAAW,CAAC;AAAA,EAC5C;AACF;AAxNER,IAAA,oBAAA,QAAA;AACAC,IAAA,oBAAA,QAAA;AACAC,IAAA,oBAAA,QAAA;AACAC,IAAA,oBAAA,QAAA;AACAC,IAAA,oBAAA,QAAA;AACAC,IAAA,oBAAA,QAAA;AACAC,IAAA,oBAAA,QAAA;AACAC,IAAA,oBAAA,QAAA;AACAC,IAAA,oBAAA,QAAA;AACAC,IAAA,oBAAA,QAAA;AAXWC,IAANuC,EAAA;AAAA,EADNC,EAAc,8BAA8B;AAAA,GAChCxC,CAAA;AA4Nb,MAAAyC,IAAezC;"}